{"repository_name":"pledge","body":"# pledge.cr\n[![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://chris-huxtable.github.io/pledge.cr/)\n[![GitHub release](https://img.shields.io/github/release/chris-huxtable/pledge.cr.svg)](https://github.com/chris-huxtable/pledge.cr/releases)\n\nAdds `pledge(2)` to crystal.\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n``` yaml\ndependencies:\n  pledge:\n    github: chris-huxtable/pledge.cr\n```\n\n## Usage\n\n``` crystal\nrequire \"pledge\"\n```\n\nPartial `syscall` restrictions:\n``` crystal\nProcess.pledge(:stdio, :rpath, :wpath, :flock)\nProcess.pledge(\"stdio\", \"rpath\")\n```\n\nFull restrictions:\n``` crystal\nProcess.pledge()\n```\n\nMore information and a list of 'promises' is available in the OpenBSD [man pages](http://man.openbsd.org/pledge).\n\n## Contributing\n\n1. Fork it ( https://github.com/chris-huxtable/pledge.cr/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'Add some feature')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Chris Huxtable](https://github.com/chris-huxtable) - creator, maintainer\n","program":{"html_id":"pledge/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"pledge","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"pledge/Process","path":"Process.html","kind":"class","full_name":"Process","name":"Process","abstract":false,"superclass":{"html_id":"pledge/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"pledge/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"pledge/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/pledge/process+pledge.cr","line_number":17,"url":"https://github.com/chris-huxtable/pledge.cr/blob/v0.1.0/src/pledge/process+pledge.cr#L17"}],"repository_name":"pledge","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"pledge(promises:Array(String|Symbol)=[&quot;&quot;]ofString|Symbol,execpromises:Array(String)?=nil)-class-method","html_id":"pledge(promises:Array(String|Symbol)=[&quot;&quot;]ofString|Symbol,execpromises:Array(String)?=nil)-class-method","name":"pledge","doc":"The current process is forced into a restricted-service operating mode. A\nfew subsets are available, roughly described as computation, memory\nmanagement, read-write operations on file descriptors, opening of files,\nnetworking. In general, these modes were selected by studying the operation\nof many programs using libc and other such interfaces, and setting promises\nor execpromises.\n\nA process which attempts a restricted operation is killed with an\nuncatchable SIGABRT.\n\nMore information is available in the OpenBSD [man pages](http://man.openbsd.org/pledge).\n\nTo restrict a process:\n```\nProcess.pledge(:stdio, :rpath, :wpath, :flock)\nProcess.pledge([\"stdio\", \"rpath\"], [\"/some/exec/promise\"])\n```\n\nTo completely restrict a process:\n```\nProcess.pledge()\n```","summary":"<p>The current process is forced into a restricted-service operating mode.</p>","abstract":false,"args":[{"name":"promises","doc":null,"default_value":"[\"\"] of String | Symbol","external_name":"promises","restriction":"Array(String | Symbol)"},{"name":"execpromises","doc":null,"default_value":"nil","external_name":"execpromises","restriction":"Array(String) | ::Nil"}],"args_string":"(promises : Array(String | Symbol) = [<span class=\"s\">&quot;&quot;</span>] <span class=\"k\">of</span> <span class=\"t\">String</span> <span class=\"o\">|</span> <span class=\"t\">Symbol</span>, execpromises : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(promises : Array(String | Symbol) = [<span class=\"s\">&quot;&quot;</span>] <span class=\"k\">of</span> <span class=\"t\">String</span> <span class=\"o\">|</span> <span class=\"t\">Symbol</span>, execpromises : Array(String)? = <span class=\"n\">nil</span>)","location":{"filename":"src/pledge/process+pledge.cr","line_number":41,"url":"https://github.com/chris-huxtable/pledge.cr/blob/v0.1.0/src/pledge/process+pledge.cr#L41"},"def":{"name":"pledge","args":[{"name":"promises","doc":null,"default_value":"[\"\"] of String | Symbol","external_name":"promises","restriction":"Array(String | Symbol)"},{"name":"execpromises","doc":null,"default_value":"nil","external_name":"execpromises","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if flag?(:openbsd) %}\n\t\t\tpromises = promises.join(' ')\n\t\t\texecpromises = execpromises.join(' ') if execpromises\n\t\t\tif ( LibC.pledge(promises, execpromises) != 0 )\n\t\t\t\tcase ( Errno.value )\n\t\t\t\t\twhen Errno::EFAULT then raise Errno.new(\"pledge: Promises or execpromises points outside the process's allocated address space\")\n\t\t\t\t\twhen Errno::EINVAL then raise Errno.new(\"pledge: Promises is malformed or contains invalid keywords\")\n\t\t\t\t\twhen Errno::EPERM  then raise Errno.new(\"pledge: This process is attempting to increase permissions\")\n\t\t\t\t\telse raise Errno.new(\"pledge\")\n\t\t\t\tend\n\t\t\tend\n\t\t{% else %}\n\t\t\traise NotImplementedError.new(\"Process.pledge\")\n\t\t{% end %}"}},{"id":"pledge(*promises:String|Symbol)-class-method","html_id":"pledge(*promises:String|Symbol)-class-method","name":"pledge","doc":"The current process is forced into a restricted-service operating mode. A\nfew subsets are available, roughly described as computation, memory\nmanagement, read-write operations on file descriptors, opening of files,\nnetworking. In general, these modes were selected by studying the operation\nof many programs using libc and other such interfaces, and setting promises\nor execpromises.\n\nA process which attempts a restricted operation is killed with an\nuncatchable SIGABRT.\n\nMore information is available in the OpenBSD [man pages](http://man.openbsd.org/pledge).\n\nTo restrict a process:\n```\nProcess.pledge(:stdio, :rpath, :wpath, :flock)\nProcess.pledge([\"stdio\", \"rpath\"], [\"/some/exec/promise\"])\n```\n\nTo completely restrict a process:\n```\nProcess.pledge()\n```","summary":"<p>The current process is forced into a restricted-service operating mode.</p>","abstract":false,"args":[{"name":"promises","doc":null,"default_value":"","external_name":"promises","restriction":"String | Symbol"}],"args_string":"(*promises : String | Symbol)","args_html":"(*promises : String | Symbol)","location":{"filename":"src/pledge/process+pledge.cr","line_number":59,"url":"https://github.com/chris-huxtable/pledge.cr/blob/v0.1.0/src/pledge/process+pledge.cr#L59"},"def":{"name":"pledge","args":[{"name":"promises","doc":null,"default_value":"","external_name":"promises","restriction":"String | Symbol"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pledge(promises.to_a)"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}}